name: CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
      - name: Run tests
        run: |
          pytest -q
      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_TAG }} backend
        env:
          IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/freelas-backend:${{ github.sha }}
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${{ env.IMAGE_TAG }}

  build-apk:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    needs: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: expo/expo-github-action@v8
        with:
          expo-version: latest
      - name: Install frontend deps
        run: yarn --cwd frontend install --frozen-lockfile
      - name: Build APK
        run: expo build:android -o app.apk --non-interactive
      - name: Upload to Azure Blob
        uses: azure/cli@v1
        with:
          inlineScript: |
            az storage blob upload --container-name ${{ secrets.AZURE_CONTAINER }} --file app.apk --name app-${{ github.sha }}.apk --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} --sas-token ${{ secrets.AZURE_SAS_TOKEN }}
