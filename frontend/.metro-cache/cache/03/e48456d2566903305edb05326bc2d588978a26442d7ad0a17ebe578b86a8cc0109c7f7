{"dependencies":[{"name":"./commons.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"glGFVKq6JnHqcEVNii1WndfU66Y=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encodePacket = void 0;\n  exports.encodePacketToBinary = encodePacketToBinary;\n  var _commons = require(_dependencyMap[0], \"./commons.js\");\n  var withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\n  var withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n  // ArrayBuffer.isView method is not defined in IE10\n  var isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var encodePacket = (_ref, supportsBinary, callback) => {\n    var type = _ref.type,\n      data = _ref.data;\n    if (withNativeBlob && data instanceof Blob) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(data, callback);\n      }\n    } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(new Blob([data]), callback);\n      }\n    }\n    // plain string\n    return callback(_commons.PACKET_TYPES[type] + (data || \"\"));\n  };\n  exports.encodePacket = encodePacket;\n  var encodeBlobAsBase64 = (data, callback) => {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      var content = fileReader.result.split(\",\")[1];\n      callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n  };\n  function toArray(data) {\n    if (data instanceof Uint8Array) {\n      return data;\n    } else if (data instanceof ArrayBuffer) {\n      return new Uint8Array(data);\n    } else {\n      return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n  }\n  var TEXT_ENCODER;\n  function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n      return packet.data.arrayBuffer().then(toArray).then(callback);\n    } else if (withNativeArrayBuffer && (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n      return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n      if (!TEXT_ENCODER) {\n        TEXT_ENCODER = new TextEncoder();\n      }\n      callback(TEXT_ENCODER.encode(encoded));\n    });\n  }\n});","lineCount":65,"map":[[7,2,1,0],[7,6,1,0,"_commons"],[7,14,1,0],[7,17,1,0,"require"],[7,24,1,0],[7,25,1,0,"_dependencyMap"],[7,39,1,0],[8,2,2,0],[8,6,2,6,"withNativeBlob"],[8,20,2,20],[8,23,2,23],[8,30,2,30,"Blob"],[8,34,2,34],[8,39,2,39],[8,49,2,49],[8,53,3,5],[8,60,3,12,"Blob"],[8,64,3,16],[8,69,3,21],[8,80,3,32],[8,84,4,8,"Object"],[8,90,4,14],[8,91,4,15,"prototype"],[8,100,4,24],[8,101,4,25,"toString"],[8,109,4,33],[8,110,4,34,"call"],[8,114,4,38],[8,115,4,39,"Blob"],[8,119,4,43],[8,120,4,44],[8,125,4,49],[8,151,4,76],[9,2,5,0],[9,6,5,6,"withNativeArrayBuffer"],[9,27,5,27],[9,30,5,30],[9,37,5,37,"ArrayBuffer"],[9,48,5,48],[9,53,5,53],[9,63,5,63],[10,2,6,0],[11,2,7,0],[11,6,7,6,"isView"],[11,12,7,12],[11,15,7,16,"obj"],[11,18,7,19],[11,22,7,24],[12,4,8,4],[12,11,8,11],[12,18,8,18,"ArrayBuffer"],[12,29,8,29],[12,30,8,30,"isView"],[12,36,8,36],[12,41,8,41],[12,51,8,51],[12,54,9,10,"ArrayBuffer"],[12,65,9,21],[12,66,9,22,"isView"],[12,72,9,28],[12,73,9,29,"obj"],[12,76,9,32],[12,77,9,33],[12,80,10,10,"obj"],[12,83,10,13],[12,87,10,17,"obj"],[12,90,10,20],[12,91,10,21,"buffer"],[12,97,10,27],[12,109,10,39,"ArrayBuffer"],[12,120,10,50],[13,2,11,0],[13,3,11,1],[14,2,12,0],[14,6,12,6,"encodePacket"],[14,18,12,18],[14,21,12,21,"encodePacket"],[14,22,12,21,"_ref"],[14,26,12,21],[14,28,12,38,"supportsBinary"],[14,42,12,52],[14,44,12,54,"callback"],[14,52,12,62],[14,57,12,67],[15,4,12,67],[15,8,12,24,"type"],[15,12,12,28],[15,15,12,28,"_ref"],[15,19,12,28],[15,20,12,24,"type"],[15,24,12,28],[16,6,12,30,"data"],[16,10,12,34],[16,13,12,34,"_ref"],[16,17,12,34],[16,18,12,30,"data"],[16,22,12,34],[17,4,13,4],[17,8,13,8,"withNativeBlob"],[17,22,13,22],[17,26,13,26,"data"],[17,30,13,30],[17,42,13,42,"Blob"],[17,46,13,46],[17,48,13,48],[18,6,14,8],[18,10,14,12,"supportsBinary"],[18,24,14,26],[18,26,14,28],[19,8,15,12],[19,15,15,19,"callback"],[19,23,15,27],[19,24,15,28,"data"],[19,28,15,32],[19,29,15,33],[20,6,16,8],[20,7,16,9],[20,13,17,13],[21,8,18,12],[21,15,18,19,"encodeBlobAsBase64"],[21,33,18,37],[21,34,18,38,"data"],[21,38,18,42],[21,40,18,44,"callback"],[21,48,18,52],[21,49,18,53],[22,6,19,8],[23,4,20,4],[23,5,20,5],[23,11,21,9],[23,15,21,13,"withNativeArrayBuffer"],[23,36,21,34],[23,41,22,9,"data"],[23,45,22,13],[23,57,22,25,"ArrayBuffer"],[23,68,22,36],[23,72,22,40,"isView"],[23,78,22,46],[23,79,22,47,"data"],[23,83,22,51],[23,84,22,52],[23,85,22,53],[23,87,22,55],[24,6,23,8],[24,10,23,12,"supportsBinary"],[24,24,23,26],[24,26,23,28],[25,8,24,12],[25,15,24,19,"callback"],[25,23,24,27],[25,24,24,28,"data"],[25,28,24,32],[25,29,24,33],[26,6,25,8],[26,7,25,9],[26,13,26,13],[27,8,27,12],[27,15,27,19,"encodeBlobAsBase64"],[27,33,27,37],[27,34,27,38],[27,38,27,42,"Blob"],[27,42,27,46],[27,43,27,47],[27,44,27,48,"data"],[27,48,27,52],[27,49,27,53],[27,50,27,54],[27,52,27,56,"callback"],[27,60,27,64],[27,61,27,65],[28,6,28,8],[29,4,29,4],[30,4,30,4],[31,4,31,4],[31,11,31,11,"callback"],[31,19,31,19],[31,20,31,20,"PACKET_TYPES"],[31,41,31,32],[31,42,31,33,"type"],[31,46,31,37],[31,47,31,38],[31,51,31,42,"data"],[31,55,31,46],[31,59,31,50],[31,61,31,52],[31,62,31,53],[31,63,31,54],[32,2,32,0],[32,3,32,1],[33,2,32,2,"exports"],[33,9,32,2],[33,10,32,2,"encodePacket"],[33,22,32,2],[33,25,32,2,"encodePacket"],[33,37,32,2],[34,2,33,0],[34,6,33,6,"encodeBlobAsBase64"],[34,24,33,24],[34,27,33,27,"encodeBlobAsBase64"],[34,28,33,28,"data"],[34,32,33,32],[34,34,33,34,"callback"],[34,42,33,42],[34,47,33,47],[35,4,34,4],[35,8,34,10,"fileReader"],[35,18,34,20],[35,21,34,23],[35,25,34,27,"FileReader"],[35,35,34,37],[35,36,34,38],[35,37,34,39],[36,4,35,4,"fileReader"],[36,14,35,14],[36,15,35,15,"onload"],[36,21,35,21],[36,24,35,24],[36,36,35,36],[37,6,36,8],[37,10,36,14,"content"],[37,17,36,21],[37,20,36,24,"fileReader"],[37,30,36,34],[37,31,36,35,"result"],[37,37,36,41],[37,38,36,42,"split"],[37,43,36,47],[37,44,36,48],[37,47,36,51],[37,48,36,52],[37,49,36,53],[37,50,36,54],[37,51,36,55],[38,6,37,8,"callback"],[38,14,37,16],[38,15,37,17],[38,18,37,20],[38,22,37,24,"content"],[38,29,37,31],[38,33,37,35],[38,35,37,37],[38,36,37,38],[38,37,37,39],[39,4,38,4],[39,5,38,5],[40,4,39,4],[40,11,39,11,"fileReader"],[40,21,39,21],[40,22,39,22,"readAsDataURL"],[40,35,39,35],[40,36,39,36,"data"],[40,40,39,40],[40,41,39,41],[41,2,40,0],[41,3,40,1],[42,2,41,0],[42,11,41,9,"toArray"],[42,18,41,16,"toArray"],[42,19,41,17,"data"],[42,23,41,21],[42,25,41,23],[43,4,42,4],[43,8,42,8,"data"],[43,12,42,12],[43,24,42,24,"Uint8Array"],[43,34,42,34],[43,36,42,36],[44,6,43,8],[44,13,43,15,"data"],[44,17,43,19],[45,4,44,4],[45,5,44,5],[45,11,45,9],[45,15,45,13,"data"],[45,19,45,17],[45,31,45,29,"ArrayBuffer"],[45,42,45,40],[45,44,45,42],[46,6,46,8],[46,13,46,15],[46,17,46,19,"Uint8Array"],[46,27,46,29],[46,28,46,30,"data"],[46,32,46,34],[46,33,46,35],[47,4,47,4],[47,5,47,5],[47,11,48,9],[48,6,49,8],[48,13,49,15],[48,17,49,19,"Uint8Array"],[48,27,49,29],[48,28,49,30,"data"],[48,32,49,34],[48,33,49,35,"buffer"],[48,39,49,41],[48,41,49,43,"data"],[48,45,49,47],[48,46,49,48,"byteOffset"],[48,56,49,58],[48,58,49,60,"data"],[48,62,49,64],[48,63,49,65,"byteLength"],[48,73,49,75],[48,74,49,76],[49,4,50,4],[50,2,51,0],[51,2,52,0],[51,6,52,4,"TEXT_ENCODER"],[51,18,52,16],[52,2,53,7],[52,11,53,16,"encodePacketToBinary"],[52,31,53,36,"encodePacketToBinary"],[52,32,53,37,"packet"],[52,38,53,43],[52,40,53,45,"callback"],[52,48,53,53],[52,50,53,55],[53,4,54,4],[53,8,54,8,"withNativeBlob"],[53,22,54,22],[53,26,54,26,"packet"],[53,32,54,32],[53,33,54,33,"data"],[53,37,54,37],[53,49,54,49,"Blob"],[53,53,54,53],[53,55,54,55],[54,6,55,8],[54,13,55,15,"packet"],[54,19,55,21],[54,20,55,22,"data"],[54,24,55,26],[54,25,55,27,"arrayBuffer"],[54,36,55,38],[54,37,55,39],[54,38,55,40],[54,39,55,41,"then"],[54,43,55,45],[54,44,55,46,"toArray"],[54,51,55,53],[54,52,55,54],[54,53,55,55,"then"],[54,57,55,59],[54,58,55,60,"callback"],[54,66,55,68],[54,67,55,69],[55,4,56,4],[55,5,56,5],[55,11,57,9],[55,15,57,13,"withNativeArrayBuffer"],[55,36,57,34],[55,41,58,9,"packet"],[55,47,58,15],[55,48,58,16,"data"],[55,52,58,20],[55,64,58,32,"ArrayBuffer"],[55,75,58,43],[55,79,58,47,"isView"],[55,85,58,53],[55,86,58,54,"packet"],[55,92,58,60],[55,93,58,61,"data"],[55,97,58,65],[55,98,58,66],[55,99,58,67],[55,101,58,69],[56,6,59,8],[56,13,59,15,"callback"],[56,21,59,23],[56,22,59,24,"toArray"],[56,29,59,31],[56,30,59,32,"packet"],[56,36,59,38],[56,37,59,39,"data"],[56,41,59,43],[56,42,59,44],[56,43,59,45],[57,4,60,4],[58,4,61,4,"encodePacket"],[58,16,61,16],[58,17,61,17,"packet"],[58,23,61,23],[58,25,61,25],[58,30,61,30],[58,32,61,33,"encoded"],[58,39,61,40],[58,43,61,45],[59,6,62,8],[59,10,62,12],[59,11,62,13,"TEXT_ENCODER"],[59,23,62,25],[59,25,62,27],[60,8,63,12,"TEXT_ENCODER"],[60,20,63,24],[60,23,63,27],[60,27,63,31,"TextEncoder"],[60,38,63,42],[60,39,63,43],[60,40,63,44],[61,6,64,8],[62,6,65,8,"callback"],[62,14,65,16],[62,15,65,17,"TEXT_ENCODER"],[62,27,65,29],[62,28,65,30,"encode"],[62,34,65,36],[62,35,65,37,"encoded"],[62,42,65,44],[62,43,65,45],[62,44,65,46],[63,4,66,4],[63,5,66,5],[63,6,66,6],[64,2,67,0],[65,0,67,1],[65,3]],"functionMap":{"names":["<global>","isView","encodePacket","encodeBlobAsBase64","fileReader.onload","toArray","encodePacketToBinary","encodePacket$argument_2"],"mappings":"AAA;eCM;CDI;qBEC;CFoB;2BGC;wBCE;KDG;CHE;AKC;CLU;OME;gCCQ;KDK;CNC"}},"type":"js/module"}]}